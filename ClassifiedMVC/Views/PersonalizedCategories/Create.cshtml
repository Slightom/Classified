@model ClassifiedMVC.Models.PersonalizedCategory

@{
    ViewBag.Title = "Create";

    var displayStyle = "";
    if (User.IsInRole("Admin"))
    {
        displayStyle = "unset;";
    }
    else
    {
        displayStyle = "none;";
    }
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PersonalizedCategory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Hidden("CategoryID", Model.CategoryID)
                @Html.Action("CategoryChoosingPartial", "Home")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-10" style="color:red">
               @ViewBag.ErrorP
            </div>
        </div>

        <div class="form-group"  style="display:@displayStyle">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriceMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriceMax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceMax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceMax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("State", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="location">
            @Html.Action("GenerateLocations", "PersonalizedCategories")
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script type="text/javascript">

    function choosingCategory(xx) {

        // part 1: change button text and generate category path
        updateCategory(xx);


        // part 2: refresh partialView
        refreshPartialView();


        // part 4: set categoryID for model
        setCategoryID(xx);
    }

    function updateCategory(xx)
    {
        $.post("/Home/categoryPath", { x: xx }, function (p) {
            document.getElementById("categoryPath0").innerHTML = p;
        });

        document.getElementById("dLabel").innerHTML = "Change";

    }

    function refreshPartialView()
    {
        $("#allAttributes").load('@(Url.Action("GenerateAllAttributes","Home"))');
    }

    function setCategoryID(xx) {
        $.post("/Home/categoryID", { x: xx }, function (p) {
            document.getElementById('CategoryID').value = p;
        });
    }

</script>