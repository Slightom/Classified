@model ClassifiedMVC.Models.Classified

@{
    ViewBag.Title = "Create";
    ViewBag.c = "Cars";
}






<h2>Create</h2>


@using (Html.BeginForm("Create", "Classifieds", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Classified</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 10, 80, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Hidden("CategoryID", Model.CategoryID)
                @Html.Action("CategoryChoosingPartial", "Home")
            </div>
        </div>

        <div id="errorCategory">
            <div class="col-md-2"></div>
            <div class="col-md-10"> <span style="color: red">@ViewBag.Category0</span> <br><br></div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("State", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.Counter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Counter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Counter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.Reported, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reported, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reported, "", new { @class = "text-danger" })
            </div>
        </div>


        <div id="location">
            @Html.Action("GenerateLocations", "Home")
        </div>


        <div id="allAttributes">
            @*@Html.Action("GenerateAllAttributes", "Home")*@
        </div>

        <div id="gallery">
            @Html.Partial("GenerateGallery")
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<script type="text/javascript">

    function choosingCategory(xx) {

        // part 1: change button text and generate category path
        updateCategory(xx);
      

        // part 2: refresh partialView
        refreshPartialView();


        // part 3: show selected Attributes
        for (var i = 0; i < 100000000; i++) {

        }

        showSelectedAttributes(xx);
        

        // part 4: set categoryID for model
        setCategoryID(xx);
    }

    function updateCategory(xx)
    {
        $.post("/Home/categoryPath", { x: xx }, function (p) {
            document.getElementById("categoryPath0").innerHTML = p;
        });

        document.getElementById("dLabel").innerHTML = "Change";
       
    }

    function refreshPartialView()
    {
        $("#allAttributes").load('@(Url.Action("GenerateAllAttributes","Home"))');
    }

    function showSelectedAttributes(xx)
    {

        $(document).ready(function(){
            $.post("/Home/giveMeSelectedAttributes", { x: xx }, function (p) {
                //alert(p);
                for (var i = 0, l = p.length; i < l; i++) {
                    $("#" + p[i]).show();
                }
            });
        });
    }

    function setCategoryID(xx) {
        $.post("/Home/categoryID", { x: xx }, function (p) {
            document.getElementById('CategoryID').value = p;
        });
    }

</script>